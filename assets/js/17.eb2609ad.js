(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{333:function(a,e,t){"use strict";t.r(e);var s=t(1),r=Object(s.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var a=this,e=a.$createElement,t=a._self._c||e;return t("div",{staticClass:"content"},[t("p",[a._v("[TOC]")]),a._v(" "),t("h2",{attrs:{id:"一、koa2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一、koa2","aria-hidden":"true"}},[a._v("#")]),a._v(" 一、Koa2")]),a._v(" "),t("h3",{attrs:{id:"（一）初始化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#（一）初始化","aria-hidden":"true"}},[a._v("#")]),a._v(" （一）初始化")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("// 导入koa，和koa 1.x不同，在koa2中，我们导入的是一个class，因此用大写的Koa表示:\nconst Koa = require('koa');\n\n// 创建一个Koa对象表示web app本身:\nconst app = new Koa();\n\n// 对于任何请求，app将调用该异步函数处理请求：\napp.use(async (ctx, next) => {\n    await next();\n    ctx.response.type = 'text/html';\n    ctx.response.body = '<h1>Hello, koa2!</h1>';\n});\n\n// 在端口3000监听:\napp.listen(3000);\nconsole.log('app started at port 3000...');\n")])])]),t("h3",{attrs:{id:"二-运行逻辑"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#二-运行逻辑","aria-hidden":"true"}},[a._v("#")]),a._v(" (二) 运行逻辑")]),a._v(" "),t("ul",[t("li",[a._v("对于每一个http请求，koa将调用我们传入的异步函数来处理：")])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("app.use(async (ctx, next) => {\n    if (await checkUserPermission(ctx)) {\n        await next();\n    } else {\n        ctx.response.status = 403;\n    }\n});\n")])])]),t("ul",[t("li",[a._v("ctx参数：封装了request和response变量")]),a._v(" "),t("li",[a._v("next参数：koa下一步将要执行的异步函数")]),a._v(" "),t("li",[a._v("middleware（中间件）: koa把async函数组成一个处理链，每个async函数通过await next()来调用下一个函数。app.use()的顺序决定了middleware在处理链中的顺序。")])]),a._v(" "),t("h3",{attrs:{id:"（三）附加依赖模块（middleware）"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#（三）附加依赖模块（middleware）","aria-hidden":"true"}},[a._v("#")]),a._v(" （三）附加依赖模块（middleware）")]),a._v(" "),t("h4",{attrs:{id:"_1-koa-router（处理url，不同url对应不同的处理方法）"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-koa-router（处理url，不同url对应不同的处理方法）","aria-hidden":"true"}},[a._v("#")]),a._v(" 1.koa-router（处理url，不同url对应不同的处理方法）")]),a._v(" "),t("ul",[t("li",[a._v("注册get请求")])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("router.get(url,async(ctx.next => {\n   .....\n});\n")])])]),t("p",[a._v("url的值可以是：'/'（默认端口）\n也可以是带变量的值：/<...>/:")]),t("param"),t("p"),a._v(" "),t("ul",[t("li",[a._v("在app对象上注册router模块")])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("app.use(router.routes());\n")])])]),t("h4",{attrs:{id:"_2-koa-bodyparser（解析request的body部分）"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-koa-bodyparser（解析request的body部分）","aria-hidden":"true"}},[a._v("#")]),a._v(" 2. koa-bodyparser（解析Request的body部分）")]),a._v(" "),t("p",[a._v("Post请求通常会发送一个表单，或者JSON。它作为request的body发送，但无论是Node.js还是koa的ctx，都不支持解析request的body。")]),a._v(" "),t("h5",{attrs:{id:"（1）初始化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#（1）初始化","aria-hidden":"true"}},[a._v("#")]),a._v(" （1）初始化")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("const bodyParser = require('kpa-bodyparser');\n")])])]),t("p",[a._v("在koa-router之前，把它注册到app对象上")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("app.use(bodyParser());\n")])])])])}],!1,null,null,null);r.options.__file="Koa2学习笔记.md";e.default=r.exports}}]);