(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{329:function(a,e,t){"use strict";t.r(e);var r=t(1),s=Object(r.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var a=this,e=a.$createElement,t=a._self._c||e;return t("div",{staticClass:"content"},[t("p",[a._v("[TOC]")]),a._v(" "),t("h2",{attrs:{id:"一、模块的含义"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一、模块的含义","aria-hidden":"true"}},[a._v("#")]),a._v(" 一、模块的含义")]),a._v(" "),t("p",[a._v("一个.js文件就可以称之为一个模块")]),a._v(" "),t("h2",{attrs:{id:"二、模块的优点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#二、模块的优点","aria-hidden":"true"}},[a._v("#")]),a._v(" 二、模块的优点")]),a._v(" "),t("ul",[t("li",[a._v("可以在工作中通过引入模块来减少开发量")]),a._v(" "),t("li",[a._v("避免函数名和变量名冲突")])]),a._v(" "),t("h2",{attrs:{id:"三、使用方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#三、使用方法","aria-hidden":"true"}},[a._v("#")]),a._v(" 三、使用方法")]),a._v(" "),t("h4",{attrs:{id:"step1-在模块中设置对外接口："}},[t("a",{staticClass:"header-anchor",attrs:{href:"#step1-在模块中设置对外接口：","aria-hidden":"true"}},[a._v("#")]),a._v(" Step1 在模块中设置对外接口：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("module.exports = variable_name;\n")])])]),t("p",[a._v("例子：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("//hello.js模块\n'use strict';\nvar s = 'Hello';\nfunction greet(name){\n    console.log(s+','+name+'!');\n}\nmodule.exports = greet\n")])])]),t("p",[t("em",[a._v("==module.exports==的值表示该模块需要向外传递的属性或函数的名称")])]),a._v(" "),t("h4",{attrs:{id:"step2-模块的调用："}},[t("a",{staticClass:"header-anchor",attrs:{href:"#step2-模块的调用：","aria-hidden":"true"}},[a._v("#")]),a._v(" Step2 模块的调用：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("var m = require('other_module_name');\n")])])]),t("p",[a._v("例子：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("'use strict';\n//引入hello模块\nvar greet = require('./hello');\nvar s = 'Michael';\ngreet(s);\n")])])]),t("p",[t("em",[a._v("require()的参数需要包含==需要引入的模块名==和==模块的相对路径==")])]),a._v(" "),t("ul",[t("li",[a._v("[x] "),t("strong",[a._v("相同目录下的模块引入")]),a._v(": 若需要被引入的模块与当前模块在同一目录下，则需要在require的参数开头写当前目录 ==.==")]),a._v(" "),t("li",[a._v("[x] "),t("strong",[a._v("不同目录下的模块引入")]),a._v("：\n直接把需要引入的模块名作为require的参数值，引擎将会在全局下查找对应名称的模块")])]),a._v(" "),t("h2",{attrs:{id:"四、troubleshoot"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#四、troubleshoot","aria-hidden":"true"}},[a._v("#")]),a._v(" 四、Troubleshoot")]),a._v(" "),t("h4",{attrs:{id:"_1-加载时找不到模块"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-加载时找不到模块","aria-hidden":"true"}},[a._v("#")]),a._v(" 1. 加载时找不到模块")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("module.js\n    throw err;\n          ^\nError: Cannot find module 'hello'\n    at Function.Module._resolveFilename\n    at Function.Module._load\n    ...\n    at Function.Module._load\n    at Function.Module.runMain\n")])])]),t("p",[a._v("遇到这个错误，你要检查：")]),a._v(" "),t("ul",[t("li",[a._v("模块名是否写对了；")]),a._v(" "),t("li",[a._v("模块文件是否存在；")]),a._v(" "),t("li",[a._v("相对路径是否写对了。")])]),a._v(" "),t("p",[a._v("Eg: "),t("em",[a._v("加载的模块与当前模块在同一目录下")])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("//正确写法\nvar greet = require('./hello');\n//错误写法\nvar greet = require('hello');\n")])])]),t("h2",{attrs:{id:"五、基本模块"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#五、基本模块","aria-hidden":"true"}},[a._v("#")]),a._v(" 五、基本模块")]),a._v(" "),t("h4",{attrs:{id:"_1-global"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-global","aria-hidden":"true"}},[a._v("#")]),a._v(" 1. global")]),a._v(" "),t("p",[a._v("JS中的全局对象叫window，而node.js中的全局对象叫global")]),a._v(" "),t("h4",{attrs:{id:"_2-process"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-process","aria-hidden":"true"}},[a._v("#")]),a._v(" 2. process")]),a._v(" "),t("p",[a._v("管理node当前环境中的进程。")]),a._v(" "),t("h5",{attrs:{id:"process-nexttick-：下一轮事件事件循环执行"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#process-nexttick-：下一轮事件事件循环执行","aria-hidden":"true"}},[a._v("#")]),a._v(" process.nextTick()：下一轮事件事件循环执行")]),a._v(" "),t("h5",{attrs:{id:"状态相应回调函数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#状态相应回调函数","aria-hidden":"true"}},[a._v("#")]),a._v(" 状态相应回调函数")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("process.on('状态标识符',function(){\n  ...  \n});\n")])])]),t("h2",{attrs:{id:"六、常用模块"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#六、常用模块","aria-hidden":"true"}},[a._v("#")]),a._v(" 六、常用模块")]),a._v(" "),t("h4",{attrs:{id:"一-fs模块"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一-fs模块","aria-hidden":"true"}},[a._v("#")]),a._v(" (一)fs模块")]),a._v(" "),t("h5",{attrs:{id:"_1-读文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-读文件","aria-hidden":"true"}},[a._v("#")]),a._v(" 1.读文件")]),a._v(" "),t("h6",{attrs:{id:"_1-异步"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-异步","aria-hidden":"true"}},[a._v("#")]),a._v(" (1)异步")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("'use strict';\n\nvar fs = require('fs');\n\nfs.readFile('sample.txt', 'utf-8', function (err, data) {\n    if (err) {\n        console.log(err);\n    } else {\n        console.log(data);\n    }\n});\n")])])]),t("h4",{attrs:{id:"注意：sample-txt文件必须在当前目录下，且文件编码为utf-8"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#注意：sample-txt文件必须在当前目录下，且文件编码为utf-8","aria-hidden":"true"}},[a._v("#")]),a._v(" 注意：sample.txt文件必须在当前目录下，且文件编码为utf-8")]),a._v(" "),t("h6",{attrs:{id:"_2-同步"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-同步","aria-hidden":"true"}},[a._v("#")]),a._v(" (2)同步")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("'use strict';\n\nvar fs = require('fs');\n\nvar data = fs.readFileSync('sample.txt', 'utf-8');\nconsole.log(data);\n")])])]),t("ul",[t("li",[t("p",[a._v("原异步调用的回调函数的data被函数直接返回，函数名需要改为readFileSync，其它参数不变。")])]),a._v(" "),t("li",[t("p",[a._v("如果同步读取文件发生错误，则需要用try...catch捕获该错误：")])])]),a._v(" "),t("h5",{attrs:{id:"_2-写文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-写文件","aria-hidden":"true"}},[a._v("#")]),a._v(" 2. 写文件")]),a._v(" "),t("h6",{attrs:{id:"_1-异步-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-异步-2","aria-hidden":"true"}},[a._v("#")]),a._v(" (1)异步")]),a._v(" "),t("p",[a._v("使用fs.writeFile();")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("'use strict';\n\nvar fs = require('fs');\n\nvar data = 'Hello, Node.js';\nfs.writeFile('output.txt', data, function (err) {\n    if (err) {\n        console.log(err);\n    } else {\n        console.log('ok.');\n    }\n});\n")])])]),t("ul",[t("li",[a._v("writeFile()的参数依次为文件名、数据和回调函数。")]),a._v(" "),t("li",[a._v("如果传入的数据是String，默认按UTF-8编码写入文本文件，如果传入的参数是Buffer，则写入的是二进制文件。")]),a._v(" "),t("li",[a._v("回调函数由于只关心成功与否，因此只需要一个err参数。")])]),a._v(" "),t("h6",{attrs:{id:"_2-异步"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-异步","aria-hidden":"true"}},[a._v("#")]),a._v(" (2)异步")]),a._v(" "),t("p",[a._v("使用writeFileSync();")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("'use strict';\n\nvar fs = require('fs');\n\nvar data = 'Hello, Node.js';\nfs.writeFileSync('output.txt', data);\n")])])]),t("h5",{attrs:{id:"_3-stat-获取文件详细信息"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-stat-获取文件详细信息","aria-hidden":"true"}},[a._v("#")]),a._v(" 3.stat:获取文件详细信息")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("'use strict';\n\nvar fs = require('fs');\n\nfs.stat('sample.txt', function (err, stat) {\n    if (err) {\n        console.log(err);\n    } else {\n        // 是否是文件:\n        console.log('isFile: ' + stat.isFile());\n        // 是否是目录:\n        console.log('isDirectory: ' + stat.isDirectory());\n        if (stat.isFile()) {\n            // 文件大小:\n            console.log('size: ' + stat.size);\n            // 创建时间, Date对象:\n            console.log('birth time: ' + stat.birthtime);\n            // 修改时间, Date对象:\n            console.log('modified time: ' + stat.mtime);\n        }\n    }\n});\n")])])]),t("h3",{attrs:{id:"（二）、stream模块"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#（二）、stream模块","aria-hidden":"true"}},[a._v("#")]),a._v(" （二）、Stream模块")]),a._v(" "),t("p",[a._v("输入流，输出流。与Java中的I/O编程相似。")]),a._v(" "),t("h4",{attrs:{id:"_1-读取数据："}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-读取数据：","aria-hidden":"true"}},[a._v("#")]),a._v(" 1. 读取数据：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("'use strict';\n\nvar fs = require('fs');\n// 打开一个流:\nvar rs = fs.createReadStream('sample.txt', 'utf-8');\n//data事件可能会有多次，每次传递的chunk是流的一部分数据。\nrs.on('data', function (chunk) {\n    console.log('DATA:')\n    console.log(chunk);\n});\n\nrs.on('end', function () {\n    console.log('END');\n});\n\nrs.on('error', function (err) {\n    console.log('ERROR: ' + err);\n});\n\n")])])]),t("h4",{attrs:{id:"_2-写入数据："}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-写入数据：","aria-hidden":"true"}},[a._v("#")]),a._v(" 2. 写入数据：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("'use strict';\n\nvar fs = require('fs');\n\nvar ws1 = fs.createWriteStream('output1.txt', 'utf-8');\nws1.write('使用Stream写入文本数据...\\n');\nws1.write('END.');\nws1.end();\n\nvar ws2 = fs.createWriteStream('output2.txt');\nws2.write(new Buffer('使用Stream写入二进制数据...\\n', 'utf-8'));\nws2.write(new Buffer('END.', 'utf-8'));\nws2.end();\n")])])]),t("ul",[t("li",[a._v("所有可以读取数据的流都继承自stream.Readable，所有可以写入的流都继承自stream.Writable。")])]),a._v(" "),t("h4",{attrs:{id:"_3-pipe"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-pipe","aria-hidden":"true"}},[a._v("#")]),a._v(" 3. pipe")]),a._v(" "),t("p",[a._v("把一个Readable和一个Writable串起来后，所有数据从Readable自动进入Writable，叫做pipe")]),a._v(" "),t("p",[t("strong",[a._v("方法：使用Readable中的pipe()方法:")])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("ReadStream对象.pipe(WriteStream对象)\n")])])]),t("p",[a._v("Eg:把一个文件流和另一个文件流串起来")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("'use strict';\n\nvar fs = require('fs');\n\nvar rs = fs.createReadStream('sample.txt');\nvar ws = fs.createWriteStream('copied.txt');\n\nrs.pipe(ws);\n")])])]),t("ul",[t("li",[a._v("默认情况下，当Readable流的数据读取完毕，end事件触发后，将自动关闭Writable流。如果我们不希望自动关闭Writable流，需要传入参数：")])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("readable.pipe(writable, { end: false });\n\n")])])])])}],!1,null,null,null);s.options.__file="Node.JS学习笔记（一） 模块化编程.md";e.default=s.exports}}]);