(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{348:function(a,e,r){"use strict";r.r(e);var t=r(1),l=Object(t.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var a=this,e=a.$createElement,r=a._self._c||e;return r("div",{staticClass:"content"},[r("p",[a._v("[TOC]")]),a._v(" "),r("h3",{attrs:{id:"app目录下的文件夹"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#app目录下的文件夹","aria-hidden":"true"}},[a._v("#")]),a._v(" app目录下的文件夹")]),a._v(" "),r("h5",{attrs:{id:"_1-libs-——-存放第三方jar包"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-libs-——-存放第三方jar包","aria-hidden":"true"}},[a._v("#")]),a._v(" 1. libs —— 存放第三方jar包")]),a._v(" "),r("h5",{attrs:{id:"_2-java-——-存放所有java代码"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-java-——-存放所有java代码","aria-hidden":"true"}},[a._v("#")]),a._v(" 2. java —— 存放所有java代码")]),a._v(" "),r("h5",{attrs:{id:"_3-res-——-存放在项目中所使用到的所有图片、布局、字符串等资源："}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-res-——-存放在项目中所使用到的所有图片、布局、字符串等资源：","aria-hidden":"true"}},[a._v("#")]),a._v(" 3. res —— 存放在项目中所使用到的所有图片、布局、字符串等资源：")]),a._v(" "),r("ul",[r("li",[a._v("drawable: 图片资源")]),a._v(" "),r("li",[a._v("values: 字符串资源")]),a._v(" "),r("li",[a._v("layout: 布局资源")]),a._v(" "),r("li",[a._v("mipmap: 应用图标")])]),a._v(" "),r("p",[r("strong",[a._v("res/valuls/colors:")])]),a._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[a._v('<?xml version="1.0" encoding="utf-8"?>\n<resources>\n    <color name="colorPrimary">#3F51B5</color>\n    <color name="colorPrimaryDark">#303F9F</color>\n    <color name="colorAccent">#FF4081</color>\n</resources>\n')])])]),r("ul",[r("li",[a._v("[ ] 项目中添加的任何文件都会在R文件中生成一个相应的资源id。例如color字符串，在代码中可以通过 ==R.color.colorPrimary== 获得该字符串的引用")]),a._v(" "),r("li",[a._v("[ ] 在XML中通过 ==@color/colorPrimary== 获得该字符串的引用")])]),a._v(" "),r("h5",{attrs:{id:"_4-androidmanifest-xml-——-整个andriod项目的配置文件，在程序中定义的四大组件都需要在这个文件中进行注册"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-androidmanifest-xml-——-整个andriod项目的配置文件，在程序中定义的四大组件都需要在这个文件中进行注册","aria-hidden":"true"}},[a._v("#")]),a._v(" 4.  AndroidManifest.xml —— 整个Andriod项目的配置文件，在程序中定义的四大组件都需要在这个文件中进行注册")]),a._v(" "),r("hr"),a._v(" "),r("h3",{attrs:{id:"两个build-gradle文件"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#两个build-gradle文件","aria-hidden":"true"}},[a._v("#")]),a._v(" 两个build.gradle文件")]),a._v(" "),r("ul",[r("li",[a._v("Gradle是一个用来构建项目的插件")]),a._v(" "),r("li",[a._v("jcenter是一个代码托管仓库，很多开源项目都将代码托管在jcenter上")])]),a._v(" "),r("h4",{attrs:{id:"一、最外层的build-gradle"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#一、最外层的build-gradle","aria-hidden":"true"}},[a._v("#")]),a._v(" 一、最外层的build.gradle")]),a._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[a._v("// Top-level build file where you can add configuration options common to all sub-projects/modules.\n\nbuildscript {\n    repositories {\n        jcenter()\n    }\n    dependencies {\n        classpath 'com.android.tools.build:gradle:2.2.0'\n\n        // NOTE: Do not place your application dependencies here; they belong\n        // in the individual module build.gradle files\n    }\n}\n\nallprojects {\n    repositories {\n        jcenter()\n    }\n}\n\ntask clean(type: Delete) {\n    delete rootProject.buildDir\n}\n\n")])])]),r("h4",{attrs:{id:"二、-app目录下的build-gradle"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#二、-app目录下的build-gradle","aria-hidden":"true"}},[a._v("#")]),a._v(" 二、 app目录下的build.gradle")]),a._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[a._v("//省略版本声明\nbuildTypes {\n        release { //type： debug版和release版\n            minifyEnabled false\n            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'\n        }\n// minifyEnable表示是否混淆代码\n")])])])])}],!1,null,null,null);l.options.__file="Android开发学习笔记（二）基础项目结构.md";e.default=l.exports}}]);